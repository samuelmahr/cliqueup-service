version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.12
      # - image: circleci/postgres:9.6-alpine
      #   environment: # environment variables for primary container
      #     POSTGRES_USER: circleci-demo-go
      #     POSTGRES_DB: circle_test

    steps:
      - checkout # check out source code to working directory
      #  Wait for Postgres to be ready before proceeding
      # - run:
      #     name: Waiting for Postgres to be ready
      #     command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run unit tests
          # environment: # environment variables for the database url and path to migration files
          #   CONTACTS_DB_URL: "postgres://circleci-demo-go@localhost:5432/circle_test?sslmode=disable"
          #   CONTACTS_DB_MIGRATIONS: /home/circleci/project/db/migrations

          # store the results of our tests in the $TEST_RESULTS directory
          command: go test -count=1 -p=1 ./...
  deploy:
    docker:
      - image: circleci/node:12.2.0
    steps:
      - checkout
      - run:
          name: install dependencies
          command: sudo apt-get install awscli
      - run:
          name: install npm packages
          command: |
            cd infra
            npm install
      - run:
          name: deploy
          command: |
            cdk synth
            cdk bootstrap
            cdk deploy --require-approval never

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build